.extract-first-char(@str) when (@str = top) { @result: "t"; }.extract-first-char(@str) when (@str = bottom) { @result: "b"; }.extract-first-char(@str) when (@str = left) { @result: "l"; }.extract-first-char(@str) when (@str = right) { @result: "r"; }// pt-1, pb-1, pl-1, pr-1// mb-1, mt-1, ml-1, mr-1.generateSpace(@direction, @start: 1, @end: 30) when (@start =< @end) {    // 生成类名，例如 .pt-1, .pb-2, ... mt-1, mb-2, ...    .loop-padding(@i) when (@i =< @end) {        .extract-first-char(@direction);        @p-name: ~".p@{result}-@{i}";        @m-name: ~".m@{result}-@{i}";        // 输出对应的样式规则        @{p-name} {            padding-@{direction}: @i * 1px;        }        @{m-name} {            margin-@{direction}: @i * 1px;        }        // 递归调用以生成下一个类        .loop-padding(@i + 1);    }    // 开始循环    .loop-padding(@start);}.generateSpace(top);.generateSpace(bottom);.generateSpace(left);.generateSpace(right);.setPlaceholderStyle(@content) {    .el-input__inner::placeholder {        @content();    }    .el-input__inner::-webkit-input-placeholder {        @content();    }    .el-input__inner::-moz-placeholder {        @content();    }    .el-input__inner:-ms-input-placeholder {        @content();    }    .el-input__inner::-ms-input-placeholder {        @content();    }}